<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAA4JCQoKCg4LCw4UDgwOFBgSDg4SGBwVFRYVFRwcFhgYGBgW
        HBsfISIhHxspKSwsKSk3Nzc3Nzg4ODg4ODg4ODj/2wBDAQ8ODhERERcSEhcXExQTFx0ZGRkZHSYdHR4d
        HSYtJCAgICAkLSkrJiYmKykxMS0tMTE4ODc4ODg4ODg4ODg4ODj/wAARCACmAPQDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0igAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAK
        ACgAoAKACgDN1DXILbKQjzpfb7o+prlq4uENI+9L8B2M6w8SzLJtv8GNujqOV+oHUVjSxmtp7d+wjegu
        7e5z5EqyY67TnH1rujOMvhaYD5JEiXdIwVfUnAptpb6AOpgFABQAUAFABQAUAFABQAUANMiDvTsxXQnn
        R+tHKw5kHnR+tHKw5kHnR+tHKw5kHnR+tHKw5kHnR+tHKw5kHnR+tHKw5kHnR+tHKw5kHnR+tHKw5kHn
        R+tHKw5kHnR+tHKw5kHnR+tHKw5kHnR+tHKw5kHnR+tHKw5kHnR+tHKw5kMmvIIELu2AKmb5FzS0QXOb
        vdflu2McfyReg7/U15VfETnp8Me3+Y0yBEZ+1cDdi9SOWLHaqjIA069/s68Wb+A/LL7qa66FXklfp1IN
        3xDMGt41U5Rxvz6+ldmLqfCu+oGZ4W1t0uP7NuWyjf8AHsT2P9z6HtTw1W/uv5Ep9Dq66ygoAKACgAoA
        KACgBGYIMmhK4FKW6LnjgVvGFjNsj31diRDIAMngetFgIG1K0U480E+3zfyzSAP7Stf7/wCh/wAKAD+0
        rX+/+h/woAP7Stf7/wCh/wAKAD+0rX+/+h/woAP7Stf7/wCh/wAKAD+0rX+/+h/woAP7Stf7/wCh/wAK
        AD+0rX+/+h/woAP7Stf7/wCh/wAKAD+0rX+/+h/woAP7Stf7/wCh/wAKAD+0rX+/+h/woAiuzb3KIXY7
        T0rxsyr++oR+xv6s2px016iQ2NqOUANeHOrNs3UYkhjVegrPmZdiCWJG4NaRbBpGfPYqeQcV0Qq9zCUC
        T7Sv2RYGfe0QKj2Gc4reVRyt5KyJsYN+xicTRna6HcpHYjnNb0WZs9Hsbj7VZwXBGPOjSTH+8oavVTuk
        +5ZNTAKACgAoAKACgCjfz/NsHbrXRSjpciTKe+trEDJrlYY2kfotIZNaaObnFxqOTnlLXPyIP9r1auac
        77FqJqxxRxDEaBB6KMfyrModQAUAFABQAUAFABQAUAFABQAUAB6UAed+J21/+1gbRz9nDLiILkMCfnLN
        0GPevMtQaqc79/ml/SNV02t1Nm3kZCBng15MoiRYMjVnYu4wtTGVruTalaQRLFsIo4Wi81d8U+FlU/7X
        Rh6EV1YeovackleMnYzkg1nwZcSZawkD5/5ZycH/AL6716f1XlfuvTzM2jqreEQQRwjpGioP+AjFdZRJ
        QAUAFABQAUAFAGJdv+/f6n+dd1Ne6vQze5Fvq7CC3QXOo28R5WPMzj/d4X9TWNfSJUTbu32W7t5vk4H+
        txu2/ga5o77X8ixs19bwyeU7HzNu7y1VnbacjOEBPahQk1fp32ADfWwgW435jc4QgEknpgKBnPtijkle
        3VAV7rVoo44ZIjkSShG+RsgZw4IxkH2NXGk22n0V9xXJ5NQto32Mx3YDEKjNtB6FtoO38ahQk/8Ahxgd
        RtBEk3mjy5GKI3J3MM8D/vk0/Zyva2q1AY+oweRPJGTuhHzKyMGBP3coQG5o9m7pPr5/qBJY3P2q1im7
        soLcEc4560px5ZNAT1IBQAUAFABQAjEKCT0pSkoq72QHPXyq8hPTJzXztSV5yfdtm3KVMYcD0rJu4rEu
        +psURvME5pqIFRRJfS7V+4Pvt/StXamvPohJXL06FxsQfMeEA9azo3c1be4pnULnAz1719QZC0AFABQA
        UAFABQAUAc9et/pMn+8f5mvRpL3F6IzZBvrSwizopzqjf9e5/wDQxXNidl6lRNTVkeSwmRFLMRwo5PUV
        zUnaaLYLG39qyybTt+zxqHxxnfISM/lTv+7S/vP8kBU8pVtiJ0mX/S5nSSIHdHl32vgZOCD6HrV397Rx
        +CKs+ui0EL/pc9tAZQzlbpNr7NjNGG++y9qPdUnbT3H169gJYpRZT3QmRyZZPMjdUZ9wKqMZUHBGMc1L
        XMo2torPWwFe1gl+y2AaFkK3cjuhH3AfPwT7cjmrk1zT1v7iXrsBZmic3l0wQ4a1VQccFsy8fXmoTXLH
        /G/0As2KlbO3VhhhGgIPUHaKifxP1YyapAKACgAoAKAIbuNpIWVPv/w9uaxxNN1Kbit+g4uzM2Lw+zZk
        uZz5h6BOg/PrXJHLo29+Tv5F+0KepabLZL5u8MhOM9D+NclfCOgr35ot2GpJ+RRWK6kg89BmLdtznuOa
        qhgqtb4Fp6ic0hotHcjzHwvfHWup5TilsoP/ALeJ9pEt+ZDbRYUbUWueWTYzdqL/AO3i/ax6G3Yad5J8
        2XmTsOwrpweC9l789Z/kRJ3L1d5IUAFABQAUAFABQAUAcxft/pUv+838zXqUl7kfRGbK++tLAXdBOdVf
        /r3P/oa1y4v4V6lROirhKOJ1zx9Ms7waWF8tDg3DDcWPqg6Y+td1LCK15/cS2ZX/AAnGv/8APdf+/af4
        Vr9VpdvxFdm94c8bte3CWeoqqSSHEUycAt2Vh6muetheVc0NluhplzxnrF9pNvbyWbhGkcq2VDcAZ71G
        Gpxm3zdENj/Bur3uq2U0t44d0l2qQAvG0Ht9aMTTjCSUewI3q5xhQBjeJfEsWhxKAvm3Uv8Aq4+wH95v
        atqNF1H2SE2ce/jrXmYkSoo/uiNcfrk12/VaXZ/eTdk1l4/1aGUG6CXEX8S42N+BX+oqZYSDWl0w5jub
        XUIb6xF5bNlHQsvqCOx9wa4JQcZcrLOM0LxdrN5qtrbTzK0Uj7XGxRx9QK7quHpxg2lql3JTO9rzygoA
        a8aSKUkUOp6qwyP1pNJ6PUDP1eOOCyVIkCIH4VRgdG7CujCJKdlorCkYW+vRsQRXb/uG/D+dKS0A7SvI
        NAoAKACgAoAKACgAoAKAPNde1i+i1S6jRhtWWQDgdnYV61H+HH0RDKH9uah/fH/fIrURveBdQubvWpVm
        YEC1Y9Mf8tE/xrjxnwr1KidhrLsmlXzqcMtvKQfcIa46fxx/xIo858JWlvea3BDcIJIsOxQ9DtUkZr0s
        RJxptrRkI9E/sLR/+fC2/wC/Kf4V5vtan80vvLsedappF5bapcC0tZvKjmbySqMRgH5cHFelCpFwXNJX
        a11IOk+I/wDx52n/AF0b/wBBrmwfxS9ByONtPt75Sz8092WLcfxIWu2XL9q3zJJ2fW7T98xuoQP4z5i/
        qan93LT3X9wzs/BviWXVFezvDuuYl3LJ03p059xmuLE0VD3o7MpMg8S+EdT1fUmuoZYRFtVUWRmBGBz0
        Q981VHEQpw5WnfyE0X7DTPDtlaQ21yLJ7hEAmZ/LYl8fNy/PWs5Tqyk2uez23HoYHjeDRlitpNOECybm
        Vxb7emM8hK6MK6l3z83zEzR8BOx0W7UnhZWx+KLWWL/iR9ARw0IlMiiHcZf4Amd2fbHNd7tbXYku+Rr3
        /PO7/KSovS/ufgPUPI17/nnd/lJRel/c/ANT1DTd4sLXfnf5Me7PXO0ZzXlT+J+rLMnxpcy22lrJEcN5
        oHr/AAOa3wn8T5CkcJ/bmof3x/3yK9IgZNrd+0ZBcf8AfIqZbAeuV4xoFABQAUAFABQAUAFABQB5Z4iH
        /E3u/wDrtJ/6G1etR/hx9EQytb6ZeXP+phZh/e6L+ZwKyr47DUP4tSMX23f3LUqNOctkzo/CthLo1+95
        dFdjQmLapywJZWz6Y+X1rx8TneGqWjTjUlr2/wCDc2WGmtW0jf1bWdPm0m+QTAM1vKAG45KEAZ6cmt8N
        Nz5Z8s4LmXxrlMZNJ8vMm/LU47wP/wAh+D/dk/8AQDXp4n+E/kStz0uvMLMm48WaHazPBNdbZYyVdfLk
        OCOvITFarD1GrpaPzQrmP8R/+PO0/wCujf8AoNb4P4pegpD/AIcgf2fcnHJmxn6KKWM+NegRNrxGAdEv
        s8/uX/QVhR/iR9SmcR4D/wCQ6v8A1zeu7F/w/miEanjzXriOUaXbOUXaGuGXgnd0TPpjrWWFpJrnevYb
        ZgWnhXW7yBLiC1LROMoxdFyPXDMDXTKvTi7OWqFYrajo2o6WUF7CYvMzsOQwOOvKkiqhUhP4XewjrvAH
        /IHvf+ujf+gCuPF/xI+hUTmPC/8AyHbL/rp/jXVX/hS9BI9VrySzMvfE+jWFw9rdXPlzR43LskOMgMOV
        Ujoa1jQqSV0rp+aFc0YpUmjSWM5RwGU+oPI61k1bTsMwPHf/ACCF/wCuw/8AQJK6cJ/E+QpHnm2vSIGS
        r8hqZbAez14xoFABQAUAFABQAUAFAFO71S3ts87mHX0H1NctXFwg+WN6k/5Ym0KLa5n7se7OLu7yx+0y
        3EcIlmdmcu/Kgk7uAfrW0aGNxEV7ap7Cn/JT3t5sxniaNP8Ahx9o/wCaWxWl1W6k/j2j0Xj/AOvW1PKs
        JD7HO+89f+Ac88bWl9rl9NB9jHLeSck4HVq7FThTVoRjH0VjmnUk922/MxdZv5JruS0B2wQOVCjuV4JP
        41y1Jtu3RHVQppRUnrKSLGh3Fxp9yl9bpuMWc5BK4IwQce1Rz2XLfR9De3U6h/iNGpI+wtn/AK6f/YV0
        wwvPFSUt/IVzlo0n13V8Bf3l3KWYL0UMcsfoort0pU/KKJOr+I//AB52n/XRv/Qa5MH8UvQciT4c/wDI
        Nuf+u/8A7KtLGfGvQcTa8Rf8gW+/64P/ACrCj/Ej6obOH8B/8h1f+ub13Yv+H80Qibx/Yyw6qLvH7q4Q
        YbtuT5Sv5YNLCSThy9UxyLGmePxZ2MFrJaF2gRY96vjIUYHG30qZ4Tmk2pbu+wcxm+JfFB1xYY1g8mOI
        luW3Ek8egrSjQ9nfW9xNnU+BtPkg0VjMCv2py6j/AGCAoP44zXLip3qafZ0KRxEZuNC1ZTImZrSXlDwG
        x/iOld2lWHlJEnU/8LJi/wCfFv8Av4P/AImuX6k/5vwHzHL6hdT67qzzRxYluWVUiHPQBFGfoK6oRVKF
        r6R6i3PVLWH7PbRQZz5SKmfXaMV5Mndt92WYfjl1Gloh6mTIH0Ur/wCzV0YT4/kKRwO2vRIGSr8hpS2A
        9irxjQKACgAoAKACgAoAyNY1Xyt0SNtVB+9f+grz8VWnKXsaW70f+R1UacVH2tTZHHX1+9ycfdjHRf6m
        vQwWDhQV96j3l+iODFYmVV9odF/mUS1ekjiGM9UI6fw/B/oAfu5zWE3qFrnA3sn/ABMrsnr58mf++jXG
        92ejD4V6ItoVdre4S8eBrcr+6GduM5fgcHcPX8eKxafve7e+zOhNe6+a3Luv67m94W0XTtfluluXkjeL
        a0axlR8rZz95W6cV10q86asrP1MWrnb6VoOnaQD9kiw7cNK3zOfx/wAKmpVnU+J/ILCa1oNrrcccdy8i
        CIll8sgdeOdytRSqum7q2vcGhdF0O10WB4LZnZZG3kyEE5wB/Cq+lFSq6ju7adgsWr21jvbWW1kJCTKU
        Yr1weOM5qIy5WmugGVpPhDT9Iuxd28kzSAFcSFSOfograpiJTjyu3yFY1byytr6Bre6jEsTdVP8AMHsa
        xjJxd1oxnPv8PdGZiRJcKD/CGXA/NCa6frlT+6LlJ7LwNotrKJCslwRyFmYFfyVVz+NTLFVJK2i9Asb/
        AErnGZ2reHtN1fBuo/3i8LKh2vj0z3/GtKdadP4fuCxk/wDCu9H/AOe1z/30n/xutvrlTtH+vmLlNPSf
        DWmaQ3mW0Zabp50h3Nj26AfgKyqVp1N9uyCxpu6opZztUdSayGcF4r1cahciOI/uouBXpYelyK73ZDZh
        ba6BB5JlKxD70jKi/ViBUzdotget145oFABQAjMFGWOB6mgCFdQsmO1biIn0Drn+dAEysrDKnIPcUALQ
        B57rt8Wl8oHOSXkPqTXJg6fvSqy3bdv1NsXU0jTjslqZuc16sDzJETnFdKMWR/e6U7pbiszuNGVU0qJ+
        wUk456e1ck37zNox0PJLi6aS7mlZShkkZ9p4I3HP9a5r31O5K2hItxQBq+HPEcmi6iLlMFXUxyBuRhsH
        sR3AqoWclzaIDtR44vCMiKLH+63/AMXXb9Tj3ZPMH/Cb3v8Azyi/75b/AOLo+px7v+vkHMH/AAm97/zy
        i/75b/4uj6nHu/6+Qcwf8Jve/wDPKL/vlv8A4uj6nHu/6+Qcwf8ACb3v/PKL/vlv/i6Pqce7/r5BzB/w
        m97/AM8ov++W/wDi6Pqce7/r5BzB/wAJve/88ov++W/+Lo+px7v+vkHMH/Cb3v8Azyi/75b/AOLo+px7
        v+vkHMH/AAm97/zyi/75b/4uj6nHu/6+Qcwf8Jve/wDPKL/vlv8A4uj6nHu/6+Qcwf8ACb3v/PKL/vlv
        /i6Pqce7/r5BzC/8JveY/wBVH+R/+LNH1OPdhzGZf+INQvhtd9q/3RW0KEIiuZu2thBtoA2PCOlNfamL
        ph/o1kd2f70v8IH+71rjxVTTlRSR31cBQUAFAGZ4g0OHWrURthZ4jvt5CMhX9x3B70AchZXdrbXr6dqd
        hFHdR8OhUEMOzKe4NAHTxeHdAvYhJHaome8fyn8xQBxPiKyuPDWvWwileWwvCF2SMX25OOM+lZ1o3g+6
        Vyobl6faiktwo6muahJsqrFGQ90judgwtenBnFJEM7ll4610KRi4j7SQN9e9Z1/eVx09Ga1rePEuzzjG
        jcEbsLzXj1Kdab5Kblr2O+MoJXlbQ25fCvhnWY1Lokk4ABnibZIT6nb1/HNd1OiqUFD+VGbqOUnK+5mX
        fwms2RvsV7LG/wDAJQrr9DtCmmO7OM1Lwjr+mTmO5hAUHicMDG3uO/6U4QcnoUbUUiLGiuw3AANtBAz7
        V6ykrIzHedF6/wA6fMgDzovX+dHMgDzovX+dHMgDzovX+dHMgDzovX+dHMgDzovX+dHMgDzovX+dHMgD
        zovX+dHMgFEkZ6GnzIB+2mAbaADbQA1TvcpGrSOP4UUsf0qHUit2Br6b4S1K/YNcg2Vt/EW/1zewX+H8
        fyrmq4pbQKSO3srK3sLdLa2TZEnQf1PqTXC227sompAFABQAUAch8S9KSXShq8Xy3enspDjq0TsFZD+J
        z/8AroAs+Cr17i2Xd3XNAFTxPpknivVLaytDtgsn3Xd3jIU9di+rfy70AJrlhZwT/Yym6MoDljyevOeM
        fhW2GoU+TY4cXWqKorNpWOfuPD8q5ezbzF/55tw359DVOk1sKGKjLSWjM+WK4h4ljZP94EUJtGuj2dyt
        0bKkqa03JH72c8kse1UklsS9TW0nRdfmkV7SN4f+mj/u1/Xk/gKUpx6jjGXQ9C0uDUYrdUv51kkHeMY/
        U/4VySavodcU7al0cdKkoXNABmgAzQAZoAM0AGaADNABmgAzQBHcQx3MLwSjdHINrCmm07roB59qNjJY
        XT28n8P3W/vL2NetSmpxuQytWggoA7DwcwXSj/12k/nXl4n+Iy0bnmisBjg4NADqACgAoAKAOU+JFwTp
        EWnJzJfzIuP9iM+Yx/ML+dAFbw/b3MqfYbI+Wijbc3Q/gH9xPVz+nU+4B19paQWcC29uuyNOg/mSe5Pc
        0ARahpdrqKBZ15X7jjhh9DVQnKGxFSlGorSMaTw7cW/MMokX0b5W/wAK3WIT3RwzwT+y0/UiEVxGcOh/
        n/Kn7SL6kewqLoyRbSKT78Kc9dyioc0bwo1PQ0bW0gjBKRLn2AFZOTZ0xpqK7suQQFVy3Wk2OMbE22kW
        G2gA20AG2gA20AG2gA20AG2gA20AG2gA20AG2gDH8T6R9ttPOiH+kQcj/aXuv9RW+Hq8krPZiaOIr1CA
        oA6rwu2NK/7ayfzry8T/ABGWjS8+sBksM2TQBeU5FAC0AFABQBzmr6De6xraSOfJsYIQiy5BcsxJk8te
        3GBk/rQBvWlpb2UC29sgjiToo/Uk9yaAJaACgCOb7tAGRcMQ1AEPm0AXbS4AoA0FmU0AO8xaADzFoAPM
        WgA8xaADzFoAPMWgA8xaADzFoAPMWgA8xaADzFoAPMWgA81aAOI8S6YLK786If6PPyuP4W7r/hXpYarz
        Rs90Q0ZFdIjo/D0u3TMf9NX/AJ15eJ/iMtFzzawGWLViWoA14/u0AOoAKACgAoAKACgAoARhkUAU57MN
        QBUawNACC0daAJVSQUAPxJQAYkoAMSUAGJKADElABiSgAxJQAYkoAMSUAGJKADElADW80UAVpLiVKAKV
        9MLuBoZOh6H0PY1cJuElJAc06lGKt1HWvWjJSV11Mze8NwNLZHH/AD0evNxP8Rlo2U081gMuQWgSgC2B
        igAoAKACgBM0AJvFABvFACGQCgBhnFACedQAnmigBN4oATetAC71oAUMtAEqhTQA7YtABsWgA2LQAbFo
        ANi0AGxaADYtABsWgBDGpoArzWSvQBm3OmHtQBgatpzoPOA6ff8Ap6114WrZ8j67EtGz4MUHTz/11es8
        T/EY0dFgVgMKACgAoAKACgBjjigCs2/NAD1RqAHGI0ARmFqAG+U1AB5TUAKIWoAXyWoAcsJoAkENAEir
        igBaACgAoAKACgAoAKACgAoAKAEKg9aAK8tnFICCMg8EUAQaPpo02F4B93zGZP8AdbpV1J87v5AaGagA
        oAKACgAoAKACgBNooAWgAoAKADAoAMCgAxQAYoAKACgAoAKACgAoAKACgAoAKACgAoADQBGzYoAYZDQA
        3zTQAvmGgBRIaAHhjQA8UALQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFADS
        tADPLFAB5QoAPLFAC+WKAHBaAHUAFAH/2Q==
</value>
  </data>
</root>